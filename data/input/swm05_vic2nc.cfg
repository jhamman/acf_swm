# VIC output to netcdf Configuration File

[OPTIONS]
# Wild card enabled path
# input_files: /state/partition1/jhamman/VIC/Sheffield3h_*
input_files: /raid8/forecast/sw_monitor/data/conus/results/retro/vic/daily/asc/fluxes_* 

# Input file format type
# valid values: ascii, binary
# Note: binary files require all "columns" to be included the the fields section below.
input_file_format: ascii

# If input_file_format == binary
# Also specify the following parameters
# bin_dt_sec: time step of input data (seconds)
# bin_start_date: 1988-01-01-00
# bin_end_date: 1988-01-01-00

# input grid type (if False, Read from domain section below)
# valid values: True, False
regular_grid: True

# Output directory
out_directory: /raid2/jhamman/projects/ACF/output/swm05_nc/

# Memory Mode Options:
# standard: read entire vic file at once and immediately write each segment disk
# big_memory: read all vic file at once and store in array, write full arrays at the end
# original: read chunks of vic files (1 segment at a time) and store in array, write full segment array once all files have been read.  This is the same mode that vic2nc.c uses.
memory_mode: big_memory

# Chunksize (Number of VIC files to read before writing to netcdf)
# only valid for standard memory mode
chunksize: 100

# Prefix for output files
out_file_prefix: UW_SWM_0.5_retro_flues

# netCDF format
# Valid Values: NETCDF3_CLASSIC, NETCDF3_64BIT, NETCDF4_CLASSIC, and NETCDF4
out_file_format: NETCDF4

# Output File Precision
# This can be overwritten by the variable specific attribute: type
# Valid Values: single, double
precision: single

# Start date for first netcdf (will ignore data before) (Format: '%Y-%m-%d-%H')
# start_date: 1988-01-01-00
start_date: 1916-01-01-00

# End data for last netcdf (Format: '%Y-%m-%d-%H')
end_date: 2004-12-31-00

# VIC Calendar
# Valid Values : standard, gregorian, proleptic_gregorian noleap, 365_day, 360_day, julian, all_leap, 366_day
calendar: standard

# Time interval to use when splitting into seperate files
# Valid Values: day, month, year, decade, all
time_segment:all

# VIC output file dimensions
# Valid Values: int (0, +N), False, None
snow_bands: False
veg_tiles: False
soil_layers: 3

# Grid File (domain file): uncomment if grid is irregular or you want to use a domain file
#[DOMAIN]
#filename: /Users/jhamman/Dropbox/RASM_Joe/routing_inputs/pour_points/domain.lnd.wr50a_ar9v4.100920.nc
#longitude_var: xc
#latitude_var: yc
#y_x_dims: nj, ni
# Non-coordinate variables to include in each netcdf
#copy_vars: frac, mask, area, xv, yv

# -------------------------------------------------------------------- #
[GLOBAL_ATTRIBUTES]
title:  The University of Washington Surface Water Monitor: An experimental platform for national hydrologic assessment and prediction
version: VIC (Variable Infiltration Capacity) version 4.0.6 
grid: CONUS
# history: Created: $TIME by $USER
# institution: University of Washington
# source: sys.argv[0]
# references: Primary Historical Reference for VIC: Liang, X., D. P. Lettenmaier, E. F. Wood, and S. J. Burges, 1994: A Simple hydrologically Based Model of Land Surface Water and Energy Fluxes for GSMs, J. Geophys. Res., 99(D7), 14,415-14,428.
# comment: Output from the Variable Infiltration Capacity (VIC) Macroscale Hydrologic Model
# Conventions: CF-1.6

# -------------------------------------------------------------------- #
# FIELDS
# Reguired attribute: column -> column in ascii vic file
#                     units --> variable units
# Type attribute:  if a variable should not conform to the [OPTIONS]precision set above,
#                  a variable specific value can be added [$FIELD]type
#                  Valid datatype specifiers include: 'f4' (32-bit floating point), 'f8' (64-bit floating point), 'i4' (32-bit signed integer), 'i2' (16-bit signed integer), 'i8' (64-bit singed integer), 'i1' (8-bit signed integer), 'u1' (8-bit unsigned integer), 'u2' (16-bit unsigned integer), 'u4' (32-bit unsigned integer), 'u8' (64-bit unsigned integer), or 'S1' (single-character string). The unsigned integer types and the 64-bit integer type can only be used if the file format is NETCDF4.
# Binary input Files: if [OPTIONS]input_file_format == binary, each variable must have the following attributes
#    bin_dtypes attribute: binary data type.  Valid values: Any numpy datatype string (i.e. b, i, u, f, c, S, a, U, V).  These strings may be prepended with '>' (big-endian), '<' (little-endian), or '=' (hardware-native, the default), to specify the byte order.
#    bin_mult attribute: multiplier for compressed data.  Default = 1.0
# If the attribute dim4 is present and multiple columns are specified, the variable will be stored as 4-dimensions
# Any other attribute may be added (except reserved attriubtes such as _FillValue)

[Precipitation]
column:3
units: mm
description: Precipitation

[Evaporation]
column:4
units: mm
description: Evaporation

[Baseflow]
column:5
units: mm
description: Baseflow

[Runoff]
column:6
units: mm
description: Runoff

[Temperature]
column:7
units: C
description: Air Temperature

