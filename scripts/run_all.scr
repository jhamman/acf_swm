#!/usr/bin/env bash

# This wrapper script runs all the scripts in this directory to generate the 1/16th
# degree forcings for the SWM in the ACF basin

# For the ACF basin, the following dataset dimensions are provided, these could change:
# Stations: 868
# VIC grid cells: 1942
# Forcings length: 33238 (days) or 1092 (months) or 91 (years)
# Variables: prec, tmax, tmin, wind 

set -e  # stop on errors
set -x  # echo each execution

# 1. Calculation of the mean value of meteorological variable (Precip, Tmax, Tmin) from 
#    VIC daily forcing file. Forcing files used here have data for the period 1949-2005
#    Means are calculated over the period 1960-1999.
#
#    Output: acf.1961-2010.met_means.xyzz (length is number of grid cells in domain)
./calc_met_means.US.scr

# 2. Total Precip for each month over the period 1960-99 has been sorted in ascending order, for each cell
#
#    Output: acf.1961-2010.mon_clim.ptot (length is number of grid cells in domain)
./make_mon_clim.PCP.pl

# 3. This step aggregates the daily values of Precip, T max and T min and make three FMT files.
#    Daily values aggregated are over the period 1915-05 (check date)
#
#    Output: 33238 acf.ndx_stns.p.fmt
#            33238 acf.ndx_stns.tn.fmt
#            33238 acf.ndx_stns.tx.fmt
./make_fmt.pl

# 4. This step wraps two scrips of Mu's (no documentation on either) to calculate the climate means for each station
#    - clim_mon.py: Calculate the montly climatology
#    - stn_dly_2_mon.py: Calculate the monthly timeseries for each station
#
#    Output: mon.aciscan/* (one file per station)
#            Pavg/* (one file per station)
./calc_climate.scr

# 5. At this step monthly Precip time series is taken as input and then again a fmt file is 
#    generated which has monthly precip quantiles for all stations relative to monthly
#    climatologies.
#
#    Output: acf.ndx_stns.p-monqnt.fmt (rows=number of months in forcings, cols=number of stations)
./mk.stn_qnt_fmt.pl

# 6. This step is done to regrid monthly precip quantiles at desired resolution (1/16th deg).
#    1/16th deg DEM file is used as input. 
#    Output: acf.0625.p-monqnt.grd (rows=number of months in forcings, cols=number of grid cells in domain)
./regrid.p-monqnt.scr

# 7. ?
# 
#    Output: acf.0625.p-monamt.grd (rows=number of grid cells in domain, cols=number of months in forcings)
./grd_qnts_2_vals.pl

# 8. ?
#
#    Output: acf.0625.p-dlyamt.grd (rows=number of days in forcings, cols=number of grid cells in domain)
./regrid.p-dlyamt.scr

# 9. This step extracts p, tmax and tmin averages for a set of stations timeseries in the row order given
#     in a typical Station info file (which matches the .fmt file col order).
#
#    Output: acf.ndx_stns.p-tx-tn.1961-2010.dlyavgs (rows=number of stations, cols=four met vars)
./get.ndx_stn_avgs.scr


# 10. This step calculates T max and T min anomalies from given precalculated means.
#
#    Output: acf.ndx_stns.txanom.fmt (rows=number of days in forcings, cols=number of stations)
#            acf.ndx_stns.tnanom.fmt
./stn_vals_2_anoms.pl

# 11. Tmax and Tmin anomalies were regridded at 1/16th deg resolution.
#
#    Output: acf.tnanom.grd (rows=number of days in forcings, cols=number of grid cells in domain)
#            acf.txanom.grd
./regrid.dly_T_anoms.scr

# 12. At this step Tmax and Tmin anomalies is trasnformed to the actual values.
#
#    Output: acf.tx.grd (rows=number of days in forcings, cols=number of grid cells in domain)
#            acf.tn.grd
./anoms_2_vals.pl

# 13. This step generates forcing files for all the cell for the period 1915-05. Each of the forcing file
#     generated have four fields. (Daily Precip, Tmax, Tmin and Avg Wind speed)
#
#    Output: VIC forcings (e.g. data_30.65625_-84.46875, cols=forcing vars, rows=number of days in forcings)
./grds_2_tser.pl
